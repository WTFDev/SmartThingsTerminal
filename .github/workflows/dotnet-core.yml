name: .NET Core

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Fetch all history for all tags and branches
      run: git fetch --prune --unshallow   
        
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.2
      with:
          versionSpec: '5.2.x'        
        
    - name: GitVersion
      uses: docker://gittools/gitversion:5.2.5-linux-ubuntu-16.04-netcoreapp2.1
      with:
        args: /github/workspace /nofetch /output buildserver

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.101

    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore /p:AssemblyVersion=${{ env.GitVersion_SemVer }} /p:FileVersion=${{ env.GitVersion_SemVer }} /p:InformationalVersion=${{ env.GitVersion_SemVer }}
    - name: Test
      run: dotnet test --no-restore --verbosity normal

    - name: Publish win-arm
      run: dotnet publish .//SmartThingsTerminal//SmartThingsTerminal.csproj -o publish/v${{ env.GitVersion_SemVer }}/win-arm -c Release -r win-arm -f netcoreapp3.1 /p:PublishSingleFile=true /p:PublishTrimmed=true /p:AssemblyVersion=${{ env.GitVersion_SemVer }} /p:FileVersion=${{ env.GitVersion_SemVer }} /p:InformationalVersion=${{ env.GitVersion_SemVer }}

    - name: Zip win-arm release
      uses: papeloto/action-zip@v1
      with:
        files: publish/v${{ env.GitVersion_SemVer }}/win-arm/
        recursive: true
        dest: v${{ env.GitVersion_SemVer }}-win-arm.zip

    - name: Publish Win-arm64
      run: dotnet publish .//SmartThingsTerminal//SmartThingsTerminal.csproj -o publish/v${{ env.GitVersion_SemVer }}/win-arm64 -c Release -r win-arm64 -f netcoreapp3.1 /p:PublishSingleFile=true /p:PublishTrimmed=true /p:AssemblyVersion=${{ env.GitVersion_SemVer }} /p:FileVersion=${{ env.GitVersion_SemVer }} /p:InformationalVersion=${{ env.GitVersion_SemVer }}

    - name: Zip win-arm64 release
      uses: papeloto/action-zip@v1
      with:
        files: publish/v${{ env.GitVersion_SemVer }}/win-arm64/
        recursive: true
        dest: v${{ env.GitVersion_SemVer }}-win-arm64.zip

    - name: Publish win7-x86
      run: dotnet publish .//SmartThingsTerminal//SmartThingsTerminal.csproj -o publish/v${{ env.GitVersion_SemVer }}/win7-x86 -c Release -r win7-x86 -f netcoreapp3.1 /p:PublishSingleFile=true /p:PublishTrimmed=true /p:AssemblyVersion=${{ env.GitVersion_SemVer }} /p:FileVersion=${{ env.GitVersion_SemVer }} /p:InformationalVersion=${{ env.GitVersion_SemVer }}
    
    - name: Zip win7-x86 release
      uses: papeloto/action-zip@v1
      with:
        files: publish/v${{ env.GitVersion_SemVer }}/win7-x86/
        recursive: true
        dest: v${{ env.GitVersion_SemVer }}-win7-x86.zip
    
    - name: Publish win7-x64
      run: dotnet publish .//SmartThingsTerminal//SmartThingsTerminal.csproj -o publish/v${{ env.GitVersion_SemVer }}/win7-x64 -c Release -r win7-x64 -f netcoreapp3.1 /p:PublishSingleFile=true /p:PublishTrimmed=true /p:AssemblyVersion=${{ env.GitVersion_SemVer }} /p:FileVersion=${{ env.GitVersion_SemVer }} /p:InformationalVersion=${{ env.GitVersion_SemVer }}

    - name: Zip win7-x64 release
      uses: papeloto/action-zip@v1
      with:
        files: publish/v${{ env.GitVersion_SemVer }}/win7-x64/
        recursive: true
        dest: v${{ env.GitVersion_SemVer }}-win7-x64.zip

    - name: Publish win81-x86
      run: dotnet publish .//SmartThingsTerminal//SmartThingsTerminal.csproj -o publish/v${{ env.GitVersion_SemVer }}/win81-x86 -c Release -r win81-x86 -f netcoreapp3.1 /p:PublishSingleFile=true /p:PublishTrimmed=true /p:AssemblyVersion=${{ env.GitVersion_SemVer }} /p:FileVersion=${{ env.GitVersion_SemVer }} /p:InformationalVersion=${{ env.GitVersion_SemVer }}

    - name: Zip win81-x86 release
      uses: papeloto/action-zip@v1
      with:
        files: publish/v${{ env.GitVersion_SemVer }}/win81-x86/
        recursive: true
        dest: v${{ env.GitVersion_SemVer }}-win81-x86.zip

    - name: Publish win81-x64
      run: dotnet publish .//SmartThingsTerminal//SmartThingsTerminal.csproj -o publish/v${{ env.GitVersion_SemVer }}/win81-x64 -c Release -r win81-x64 -f netcoreapp3.1 /p:PublishSingleFile=true /p:PublishTrimmed=true /p:AssemblyVersion=${{ env.GitVersion_SemVer }} /p:FileVersion=${{ env.GitVersion_SemVer }} /p:InformationalVersion=${{ env.GitVersion_SemVer }}

    - name: Zip win81-x64 release
      uses: papeloto/action-zip@v1
      with:
        files: publish/v${{ env.GitVersion_SemVer }}/win81-x64/
        recursive: true
        dest: v${{ env.GitVersion_SemVer }}-win81-x64.zip

    - name: Publish win10-x86
      run: dotnet publish .//SmartThingsTerminal//SmartThingsTerminal.csproj -o publish/v${{ env.GitVersion_SemVer }}/win10-x86 -c Release -r win10-x86 -f netcoreapp3.1 /p:PublishSingleFile=true /p:PublishTrimmed=true /p:AssemblyVersion=${{ env.GitVersion_SemVer }} /p:FileVersion=${{ env.GitVersion_SemVer }} /p:InformationalVersion=${{ env.GitVersion_SemVer }}
    
    - name: Zip win10-x86 release
      uses: papeloto/action-zip@v1
      with:
        files: publish/v${{ env.GitVersion_SemVer }}/win10-x86/
        recursive: true
        dest: v${{ env.GitVersion_SemVer }}-win10-x86.zip    
        
    - name: Publish win10-x64
      run: dotnet publish .//SmartThingsTerminal//SmartThingsTerminal.csproj -o publish/v${{ env.GitVersion_SemVer }}/win10-x86 -c Release -r win10-x86 -f netcoreapp3.1 /p:PublishSingleFile=true /p:PublishTrimmed=true /p:AssemblyVersion=${{ env.GitVersion_SemVer }} /p:FileVersion=${{ env.GitVersion_SemVer }} /p:InformationalVersion=${{ env.GitVersion_SemVer }}
    
    - name: Zip win10-x64 release
      uses: papeloto/action-zip@v1
      with:
        files: publish/v${{ env.GitVersion_SemVer }}/win10-x64/
        recursive: true
        dest: v${{ env.GitVersion_SemVer }}-win10-x64.zip    
                    
    - name: Publish win10-arm
      run: dotnet publish .//SmartThingsTerminal//SmartThingsTerminal.csproj -o publish/v${{ env.GitVersion_SemVer }}/win10-arm -c Release -r win10-arm -f netcoreapp3.1 /p:PublishSingleFile=true /p:PublishTrimmed=true /p:AssemblyVersion=${{ env.GitVersion_SemVer }} /p:FileVersion=${{ env.GitVersion_SemVer }} /p:InformationalVersion=${{ env.GitVersion_SemVer }}

    - name: Zip win10-arm release
      uses: papeloto/action-zip@v1
      with:
        files: publish/v${{ env.GitVersion_SemVer }}/win10-arm/
        recursive: true
        dest: v${{ env.GitVersion_SemVer }}-win10-arm.zip    

    - name: Publish win10-arm64
      run: dotnet publish .//SmartThingsTerminal//SmartThingsTerminal.csproj -o publish/v${{ env.GitVersion_SemVer }}/win10-arm64 -c Release -r win10-arm64 -f netcoreapp3.1 /p:PublishSingleFile=true /p:PublishTrimmed=true /p:AssemblyVersion=${{ env.GitVersion_SemVer }} /p:FileVersion=${{ env.GitVersion_SemVer }} /p:InformationalVersion=${{ env.GitVersion_SemVer }}

    - name: Zip win10-arm64 release
      uses: papeloto/action-zip@v1
      with:
        files: publish/v${{ env.GitVersion_SemVer }}/win10-arm64/
        recursive: true
        dest: v${{ env.GitVersion_SemVer }}-win10-arm64.zip    

    - name: Publish win-x86
      run: dotnet publish .//SmartThingsTerminal//SmartThingsTerminal.csproj -o publish/v${{ env.GitVersion_SemVer }}/win-x86 -c Release -r win-x86 -f netcoreapp3.1 /p:PublishSingleFile=true /p:PublishTrimmed=true /p:AssemblyVersion=${{ env.GitVersion_SemVer }} /p:FileVersion=${{ env.GitVersion_SemVer }} /p:InformationalVersion=${{ env.GitVersion_SemVer }}

    - name: Zip win-x86 release
      uses: papeloto/action-zip@v1
      with:
        files: publish/v${{ env.GitVersion_SemVer }}/win-x86/
        recursive: true
        dest: v${{ env.GitVersion_SemVer }}-win-x86.zip    

    - name: Publish win10x64
      run: dotnet publish .//SmartThingsTerminal//SmartThingsTerminal.csproj -o publish/v${{ env.GitVersion_SemVer }}/win-x64 -c Release -r win-x64 -f netcoreapp3.1 /p:PublishSingleFile=true /p:PublishTrimmed=true /p:AssemblyVersion=${{ env.GitVersion_SemVer }} /p:FileVersion=${{ env.GitVersion_SemVer }} /p:InformationalVersion=${{ env.GitVersion_SemVer }}
    
    - name: Zip win10x64 release
      uses: papeloto/action-zip@v1
      with:
        files: publish/v${{ env.GitVersion_SemVer }}/win10x64/
        recursive: true
        dest: v${{ env.GitVersion_SemVer }}-win10x64.zip    

    - name: Publish linux-x64
      run: dotnet publish .//SmartThingsTerminal//SmartThingsTerminal.csproj -o publish/v${{ env.GitVersion_SemVer }}/linux-x64 -c Release -r linux-x64 -f netcoreapp3.1 /p:PublishSingleFile=true /p:PublishTrimmed=true /p:AssemblyVersion=${{ env.GitVersion_SemVer }} /p:FileVersion=${{ env.GitVersion_SemVer }} /p:InformationalVersion=${{ env.GitVersion_SemVer }}

    - name: Zip linux-x64 release
      uses: papeloto/action-zip@v1
      with:
        files: publish/v${{ env.GitVersion_SemVer }}/linux-x64/
        recursive: true
        dest: v${{ env.GitVersion_SemVer }}-linux-x64.zip    

    - name: Publish linux-musl-x64
      run: dotnet publish .//SmartThingsTerminal//SmartThingsTerminal.csproj -o publish/v${{ env.GitVersion_SemVer }}/linux-musl-x64 -c Release -r linux-musl-x64 -f netcoreapp3.1 /p:PublishSingleFile=true /p:PublishTrimmed=true /p:AssemblyVersion=${{ env.GitVersion_SemVer }} /p:FileVersion=${{ env.GitVersion_SemVer }} /p:InformationalVersion=${{ env.GitVersion_SemVer }}

    - name: Zip linux-musl-x64 release
      uses: papeloto/action-zip@v1
      with:
        files: publish/v${{ env.GitVersion_SemVer }}/linux-musl-x64/
        recursive: true
        dest: v${{ env.GitVersion_SemVer }}-linux-musl-x64.zip    

    - name: Publish linux-arm
      run: dotnet publish .//SmartThingsTerminal//SmartThingsTerminal.csproj -o publish/v${{ env.GitVersion_SemVer }}/linux-arm -c Release -r linux-arm -f netcoreapp3.1 /p:PublishSingleFile=true /p:PublishTrimmed=true /p:AssemblyVersion=${{ env.GitVersion_SemVer }} /p:FileVersion=${{ env.GitVersion_SemVer }} /p:InformationalVersion=${{ env.GitVersion_SemVer }}

    - name: Zip linux-arm release
      uses: papeloto/action-zip@v1
      with:
        files: publish/v${{ env.GitVersion_SemVer }}/linux-arm/
        recursive: true
        dest: v${{ env.GitVersion_SemVer }}-linux-arm.zip    

    - name: Publish linux-arm64
      run: dotnet publish ./SmartThingsTerminal/SmartThingsTerminal.csproj -o publish/v${{ env.GitVersion_SemVer }}/linux-arm64 -c Release -r linux-arm64 -f netcoreapp3.1 /p:PublishSingleFile=true /p:PublishTrimmed=true /p:AssemblyVersion=${{ env.GitVersion_SemVer }} /p:FileVersion=${{ env.GitVersion_SemVer }} /p:InformationalVersion=${{ env.GitVersion_SemVer }}

    - name: Zip linux-arm64 release
      uses: papeloto/action-zip@v1
      with:
        files: publish/v${{ env.GitVersion_SemVer }}/linux-arm64/
        recursive: true
        dest: v${{ env.GitVersion_SemVer }}-linux-arm64.zip    

    - name: Publish rhel-x64
      run: dotnet publish .//SmartThingsTerminal//SmartThingsTerminal.csproj -o publish/v${{ env.GitVersion_SemVer }}/rhel-x64 -c Release -r rhel-x64 -f netcoreapp3.1 /p:PublishSingleFile=true /p:PublishTrimmed=true /p:AssemblyVersion=${{ env.GitVersion_SemVer }} /p:FileVersion=${{ env.GitVersion_SemVer }} /p:InformationalVersion=${{ env.GitVersion_SemVer }}

    - name: Zip rhel-x64 release
      uses: papeloto/action-zip@v1
      with:
        files: publish/v${{ env.GitVersion_SemVer }}/rhel-x64/
        recursive: true
        dest: v${{ env.GitVersion_SemVer }}-rhel-x64.zip    

    - name: Publish rhel.6-x64
      run: dotnet publish .//SmartThingsTerminal//SmartThingsTerminal.csproj -o publish/v${{ env.GitVersion_SemVer }}/rhel.6-x64 -c Release -r rhel.6-x64 -f netcoreapp3.1 /p:PublishSingleFile=true /p:PublishTrimmed=true /p:AssemblyVersion=${{ env.GitVersion_SemVer }} /p:FileVersion=${{ env.GitVersion_SemVer }} /p:InformationalVersion=${{ env.GitVersion_SemVer }}

    - name: Zip rhel.6-x64 release
      uses: papeloto/action-zip@v1
      with:
        files: publish/v${{ env.GitVersion_SemVer }}/rhel.6-x64/
        recursive: true
        dest: v${{ env.GitVersion_SemVer }}-rhel.6-x64.zip    

    - name: Publish osx-x64
      run: dotnet publish .//SmartThingsTerminal//SmartThingsTerminal.csproj -o publish/v${{ env.GitVersion_SemVer }}/osx-x64 -c Release -r osx-x64 -f netcoreapp3.1 /p:PublishSingleFile=true /p:PublishTrimmed=true /p:AssemblyVersion=${{ env.GitVersion_SemVer }} /p:FileVersion=${{ env.GitVersion_SemVer }} /p:InformationalVersion=${{ env.GitVersion_SemVer }}

    - name: Zip osx-x64 release
      uses: papeloto/action-zip@v1
      with:
        files: publish/v${{ env.GitVersion_SemVer }}/osx-x64/
        recursive: true
        dest: v${{ env.GitVersion_SemVer }}-osx-x64.zip   

    - name: Publish osx.10.10-x64
      run: dotnet publish .//SmartThingsTerminal//SmartThingsTerminal.csproj -o publish/v${{ env.GitVersion_SemVer }}/osx.10.10-x64 -c Release -r osx.10.10-x64 -f netcoreapp3.1 /p:PublishSingleFile=true /p:PublishTrimmed=true /p:AssemblyVersion=${{ env.GitVersion_SemVer }} /p:FileVersion=${{ env.GitVersion_SemVer }} /p:InformationalVersion=${{ env.GitVersion_SemVer }}

    - name: Zip osx.10.10-x64 release
      uses: papeloto/action-zip@v1
      with:
        files: publish/v${{ env.GitVersion_SemVer }}/osx.10.10-x64/
        recursive: true
        dest: v${{ env.GitVersion_SemVer }}-osx.10.10-x64.zip   

    - name: Publish osx.10.11-x64
      run: dotnet publish .//SmartThingsTerminal//SmartThingsTerminal.csproj -o publish/v${{ env.GitVersion_SemVer }}/osx.10.11-x64 -c Release -r osx.10.11-x64 -f netcoreapp3.1 /p:PublishSingleFile=true /p:PublishTrimmed=true /p:AssemblyVersion=${{ env.GitVersion_SemVer }} /p:FileVersion=${{ env.GitVersion_SemVer }} /p:InformationalVersion=${{ env.GitVersion_SemVer }}

    - name: Zip osx.10.11-x64 release
      uses: papeloto/action-zip@v1
      with:
        files: publish/v${{ env.GitVersion_SemVer }}/osx.10.11-x64/
        recursive: true
        dest: v${{ env.GitVersion_SemVer }}-osx.10.11-x64.zip   

    - name: Publish osx.10.12-x64
      run: dotnet publish .//SmartThingsTerminal//SmartThingsTerminal.csproj -o publish/v${{ env.GitVersion_SemVer }}/osx.10.12-x64 -c Release -r osx.10.12-x64 -f netcoreapp3.1 /p:PublishSingleFile=true /p:PublishTrimmed=true /p:AssemblyVersion=${{ env.GitVersion_SemVer }} /p:FileVersion=${{ env.GitVersion_SemVer }} /p:InformationalVersion=${{ env.GitVersion_SemVer }}
    
    - name: Zip osx.10.12-x64 release
      uses: papeloto/action-zip@v1
      with:
        files: publish/v${{ env.GitVersion_SemVer }}/osx.10.12-x64/
        recursive: true
        dest: v${{ env.GitVersion_SemVer }}-osx.10.12-x64.zip   

    - name: Publish osx.10.13-x64
      run: dotnet publish .//SmartThingsTerminal//SmartThingsTerminal.csproj -o publish/v${{ env.GitVersion_SemVer }}/osx.10.13-x64 -c Release -r osx.10.13-x64 -f netcoreapp3.1 /p:PublishSingleFile=true /p:PublishTrimmed=true /p:AssemblyVersion=${{ env.GitVersion_SemVer }} /p:FileVersion=${{ env.GitVersion_SemVer }} /p:InformationalVersion=${{ env.GitVersion_SemVer }}

    - name: Zip osx.10.13-x64 release
      uses: papeloto/action-zip@v1
      with:
        files: publish/v${{ env.GitVersion_SemVer }}/osx.10.13-x64/
        recursive: true
        dest: v${{ env.GitVersion_SemVer }}-osx.10.13-x64.zip   

    - name: Publish osx.10.14-x64
      run: dotnet publish .//SmartThingsTerminal//SmartThingsTerminal.csproj -o publish/v${{ env.GitVersion_SemVer }}/osx.10.14-x64 -c Release -r osx.10.14-x64 -f netcoreapp3.1 /p:PublishSingleFile=true /p:PublishTrimmed=true /p:AssemblyVersion=${{ env.GitVersion_SemVer }} /p:FileVersion=${{ env.GitVersion_SemVer }} /p:InformationalVersion=${{ env.GitVersion_SemVer }}

    - name: Zip osx.10.14-x64 release
      uses: papeloto/action-zip@v1
      with:
        files: publish/v${{ env.GitVersion_SemVer }}/osx.10.14-x64/
        recursive: true
        dest: v${{ env.GitVersion_SemVer }}-osx.10.14-x64.zip   
     
    #- name: Upload releases
    #  uses: actions/upload-artifact@v2
    #  with:
    #    name: Assets
    #    path: .//publish/**/*
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      with:
        tag_name: ${{ env.GitVersion_SemVer }}
        release_name: Release ${{ env.GitVersion_SemVer }}
        draft: false
        prerelease: false
    

    - name: Upload win-arm Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./v${{ env.GitVersion_SemVer }}-win-arm.zip
        asset_name: v${{ env.GitVersion_SemVer }}-win-arm.zip
        asset_content_type: application/zip

    - name: Upload win-arm64 Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./v${{ env.GitVersion_SemVer }}-win-arm64.zip
        asset_name: v${{ env.GitVersion_SemVer }}-win-arm64.zip
        asset_content_type: application/zip

    - name: Upload win7-x86 Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./v${{ env.GitVersion_SemVer }}-win7-x86.zip
        asset_name: v${{ env.GitVersion_SemVer }}-win7-x86.zip
        asset_content_type: application/zip        

    - name: Upload win7-x64 Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./v${{ env.GitVersion_SemVer }}-win7-x64.zip
        asset_name: v${{ env.GitVersion_SemVer }}-win7-x64.zip
        asset_content_type: application/zip               

    - name: Upload win81-x86 Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./v${{ env.GitVersion_SemVer }}-win81-x86.zip
        asset_name: v${{ env.GitVersion_SemVer }}-win81-x86.zip
        asset_content_type: application/zip        

    - name: Upload win81-x64 Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./v${{ env.GitVersion_SemVer }}-win81-x64.zip
        asset_name: v${{ env.GitVersion_SemVer }}-win81-x64.zip
        asset_content_type: application/zip
    
    - name: Upload win10-x86 Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./v${{ env.GitVersion_SemVer }}-win10-x86.zip
        asset_name: v${{ env.GitVersion_SemVer }}-win10-x86.zip
        asset_content_type: application/zip              

    - name: Upload win10-x64 Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./v${{ env.GitVersion_SemVer }}-win10-x64.zip
        asset_name: v${{ env.GitVersion_SemVer }}-win10-x64.zip
        asset_content_type: application/zip            

    - name: Upload win10-arm Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./v${{ env.GitVersion_SemVer }}-win10-arm.zip
        asset_name: v${{ env.GitVersion_SemVer }}-win10-arm.zip
        asset_content_type: application/zip             

    - name: Upload win10-arm64 Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./v${{ env.GitVersion_SemVer }}-win10-arm64.zip
        asset_name: v${{ env.GitVersion_SemVer }}-win10-arm64.zip
        asset_content_type: application/zip                 

    - name: Upload win-x86 Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./v${{ env.GitVersion_SemVer }}-win-x86.zip
        asset_name: v${{ env.GitVersion_SemVer }}-win-x86.zip
        asset_content_type: application/zip       

    - name: Upload linux-x64 Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./v${{ env.GitVersion_SemVer }}-linux-x64.zip
        asset_name: v${{ env.GitVersion_SemVer }}-linux-x64.zip
        asset_content_type: application/zip            

    - name: Upload linux-musl-x64 Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./v${{ env.GitVersion_SemVer }}-linux-musl-x64.zip
        asset_name: v${{ env.GitVersion_SemVer }}-linux-musl-x64.zip
        asset_content_type: application/zip             

    - name: Upload linux-arm Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./v${{ env.GitVersion_SemVer }}-linux-arm.zip
        asset_name: v${{ env.GitVersion_SemVer }}-linux-arm.zip
        asset_content_type: application/zip           

    - name: Upload linux-arm64 Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./v${{ env.GitVersion_SemVer }}-linux-arm64.zip
        asset_name: v${{ env.GitVersion_SemVer }}-linux-arm64.zip
        asset_content_type: application/zip              

    - name: Upload rhel-x64 Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./v${{ env.GitVersion_SemVer }}-rhel-x64.zip
        asset_name: v${{ env.GitVersion_SemVer }}-rhel-x64.zip
        asset_content_type: application/zip         

    - name: Upload rhel.6-x64 Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./v${{ env.GitVersion_SemVer }}-rhel.6-x64.zip
        asset_name: v${{ env.GitVersion_SemVer }}-rhel.6-x64.zip
        asset_content_type: application/zip               

    - name: Upload osx-x64 Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./v${{ env.GitVersion_SemVer }}-osx-x64.zip
        asset_name: v${{ env.GitVersion_SemVer }}-osx-x64.zip
        asset_content_type: application/zip                  

    - name: Upload osx.10.10-x64 Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./v${{ env.GitVersion_SemVer }}-osx.10.10-x64.zip
        asset_name: v${{ env.GitVersion_SemVer }}-osx.10.10-x64.zip
        asset_content_type: application/zip                  

    - name: Upload osx.10.11-x64 Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./v${{ env.GitVersion_SemVer }}-osx.10.11-x64.zip
        asset_name: v${{ env.GitVersion_SemVer }}-osx.10.11-x64.zip
        asset_content_type: application/zip    

    - name: Upload osx.10.12-x64 Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./v${{ env.GitVersion_SemVer }}-osx.10.12-x64.zip
        asset_name: v${{ env.GitVersion_SemVer }}-osx.10.12-x64.zip
        asset_content_type: application/zip                    

    - name: Upload osx.10.13-x64 Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./v${{ env.GitVersion_SemVer }}-osx.10.13-x64.zip
        asset_name: v${{ env.GitVersion_SemVer }}-osx.10.13-x64.zip
        asset_content_type: application/zip       

    - name: Upload osx.10.14-x64 Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./v${{ env.GitVersion_SemVer }}-osx.10.14-x64.zip
        asset_name: v${{ env.GitVersion_SemVer }}-osx.10.14-x64.zip
        asset_content_type: application/zip
        
