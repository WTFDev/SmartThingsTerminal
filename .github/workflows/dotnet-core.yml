
name: .NET Core

on:
  push:
    branches: [ master ]
    paths-ignore: 
      - 'docs/**'
      - '**.md'
  pull_request:
    branches: [ master ]

jobs:
  buildJob:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        runtime: ["win-x86", "win-arm", "win-arm64", "win7-x64", "win7-x86", "win81-x64", "win81-x86", "win81-arm", "win10-x64", "win10-x86", "win10-arm", "win10-arm64", "linux-x64", "linux-musl-x64", "linux-arm", "linux-arm64", "rhel-x64", "rhel.6-x64", "tizen", "tizen.4.0.0", "tizen.5.0.0", "osx-x64", "osx.10.10-x64", "osx.10.11-x64", "osx.10.12-x64", "osx.10.13-x64", "osx.10.14-x64"]

    steps:
    - uses: actions/checkout@v2
    - name: Fetch all history for all tags and branches
      run: git fetch --prune --unshallow   
        
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.2
      with:
          versionSpec: '5.2.x'        
        
    - name: GitVersion
      uses: docker://gittools/gitversion:5.2.5-linux-ubuntu-16.04-netcoreapp2.1
      with:
        args: /github/workspace /nofetch /output buildserver

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.101

    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore /p:AssemblyVersion=${{ env.GitVersion_SemVer }} /p:FileVersion=${{ env.GitVersion_SemVer }} /p:InformationalVersion=${{ env.GitVersion_SemVer }}
    - name: Test
      run: dotnet test --no-restore --verbosity normal

    - name: Publish ${{ matrix.runtime }}
      run: dotnet publish .//SmartThingsTerminal//SmartThingsTerminal.csproj -o publish/v${{ env.GitVersion_SemVer }}/${{ matrix.runtime }} -c Release -r ${{ matrix.runtime }} -f netcoreapp3.1 /p:PublishSingleFile=true /p:PublishTrimmed=true /p:AssemblyVersion=${{ env.GitVersion_SemVer }} /p:FileVersion=${{ env.GitVersion_SemVer }} /p:InformationalVersion=${{ env.GitVersion_SemVer }}

    - name: Zip ${{ matrix.runtime }} release
      uses: papeloto/action-zip@v1
      with:
        files: publish/v${{ env.GitVersion_SemVer }}/${{ matrix.runtime }}/
        recursive: true
        dest: v${{ env.GitVersion_SemVer }}-${{ matrix.runtime }}.zip

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      with:
        tag_name: ${{ env.GitVersion_SemVer }}
        release_name: Release ${{ env.GitVersion_SemVer }}
        draft: false
        prerelease: false

    - name: Upload ${{ matrix.runtime }} Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./v${{ env.GitVersion_SemVer }}-${{ matrix.runtime }}.zip
        asset_name: v${{ env.GitVersion_SemVer }}-${{ matrix.runtime }}.zip
        asset_content_type: application/zip
